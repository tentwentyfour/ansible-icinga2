// Ansible managed

/*
 * Defines a global zone for distributed setups with masters,
 * satellites and clients.
 * This is required to sync configuration commands,
 * templates, apply rules, etc. to satellite and clients.
 * All nodes require the same configuration and must
 * have `accept_config` enabled in the `api` feature.
 */

object Zone "global-templates" {
  global = true
}

/*
 * Defines a global zone for the Icinga Director.
 * This is required to sync configuration commands,
 * templates, apply rules, etc. to satellite and clients.
 * All nodes require the same configuration and must
 * have `accept_config` enabled in the `api` feature.
 */

object Zone "director-global" {
  global = true
}

{#
 # Create Endpoints for all the nodes in our parent Zone
 #}
{% for item in i2_parent_nodes -%}
object Endpoint "{{ hostvars[item].i2_hostname }}" {
{% if i2_connection_direction == 'top-down' %}
  // Parent already connects to us.
{% else %}
  host = "{{ hostvars[item].i2_api_host }}" // Actively connect to parent.
  port = "{{ hostvars[item].i2_api_port }}"
{% endif -%}
}

{% endfor -%}

{#
 # Create Endpoints for all the nodes in our Zone
 #}
{% for item in i2_peer_nodes -%}
object Endpoint "{{ hostvars[item].i2_hostname }}" {
{% if inventory_hostname == item %}
  // That's us
{% elif (inventory_hostname == i2_peer_nodes[0] and i2_connection_direction == 'top-down')
   or (inventory_hostname != i2_peer_nodes[0] and i2_connection_direction != 'top-down' ) %}
  host = "{{ hostvars[item].i2_api_host }}" // Actively connect to peer.
  port = "{{ hostvars[item].i2_api_port }}"
{% else %}
  // Peer already connects to us.
{% endif -%}
}

{% endfor -%}

{#
 # Create Endpoints for all the nodes in child Zones
 #}
{% for item in i2_child_nodes -%}
object Endpoint "{{ hostvars[item].i2_hostname }}" {
{% if i2_connection_direction == 'top-down' %}
  host = "{{ hostvars[item].i2_api_host }}" // Actively connect to child node.
  port = "{{ hostvars[item].i2_api_port }}"
{% else %}
  // Child node will connect to us.
{% endif %}
}

{% endfor -%}

{#
 # The parent Zone of the current node
 #}
{% if i2_parent_zone is defined -%}
object Zone "{{ i2_parent_zone }}" {
  endpoints = [ {{ hostvars|dict2items
  | json_query("[?value.i2_zonename==" + "'" + i2_parent_zone + "'].key")
  | sort|map('icinga_vars')|join(', ') }} ]
}

{% endif -%}{#
 # The Zone of the current node
 #}
object Zone "{{ i2_zonename }}" {
  endpoints = [ {{ i2_peer_nodes|map('extract', hostvars, 'i2_hostname')|map('icinga_vars')|join(', ') }} ]
{% if i2_parent_zone is defined %}  parent = {{ i2_parent_zone|icinga_vars }}
{% endif %}
}

{#
 # The child Zones of the current node
 #}
{% for child_zone in i2_child_zones -%}
object Zone "{{ child_zone }}" {
  endpoints = [ {{ hostvars|dict2items
  | json_query("[?value.i2_zonename==" + "'" + child_zone + "'].key")
  | sort|map('icinga_vars')|join(', ') }} ]
  parent = "{{ i2_zonename }}"
}

{% endfor -%}
