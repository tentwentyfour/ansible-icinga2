---
- name: Master - Ensure CA directory exists
  become: yes
  file:
    path: "{{ i2_ca_path }}"
    state: directory
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
    mode: 0700

- name: Master - Create Certificate Authority
  become: yes
  command: icinga2 pki new-ca
  args:
    creates: "{{ i2_ca_file }}"
  when: inventory_hostname == i2_configuration_master

- name: Master - Check if Public Key Infrastructure has been initialized
  become: yes
  stat:
    path: "{{ i2_ca_file }}"
  register: ca_certificate

- name: Master - Synchronize CA Cert between masters
  when:
    - groups['masters']|length > 1
    - not ca_certificate.stat.exists
  block:
    - name: Create tmp directory
      tempfile:
        state: directory
      delegate_to: localhost
      register: i2_local_tmpdir
      changed_when: no
      run_once: yes
      check_mode: no
      become: no

    - name: Master - Check if Public Key Infrastructure has been initialized
      become: yes
      delegate_to: "{{ i2_configuration_master }}"
      run_once: yes
      stat:
        path: "{{ i2_ca_file }}"
      register: ca_certificate_on_conf_master

    - name: Master - Synchronize CA Cert between masters (Fetch)
      become: yes
      delegate_to: "{{ i2_configuration_master }}"
      run_once: yes
      check_mode: no
      fetch:
        src: "{{ i2_ca_path }}/{{ item }}"
        dest: "{{ i2_local_tmpdir.path }}/"
        flat: yes
      loop: ['ca.crt', 'ca.key']
      when: ca_certificate_on_conf_master.stat.exists

    - name: Master - Synchronize CA between masters (Copy)
      become: yes
      copy:
        src: "{{ i2_local_tmpdir.path }}/{{ item }}"
        dest: "{{ i2_ca_path }}/"
        owner: "{{ i2_user }}"
        group: "{{ i2_group }}"
        mode: 0644
      loop: ['ca.crt', 'ca.key']
      when: 
        - ca_certificate_on_conf_master.stat.exists
        - not ca_certificate.stat.exists
        - not i2_config_master

  always:
    - name: Remove the tmp directory
      file:
        path: "{{ i2_local_tmpdir.path }}"
        state: absent
      delegate_to: localhost
      changed_when: no
      run_once: yes
      check_mode: no
      become: no
      when: i2_local_tmpdir.path is defined

- name: Master - Recheck if Public Key Infrastructure has been initialized
  become: yes
  stat:
    path: "{{ i2_ca_file }}"
  register: ca_certificate

- name: Master - Ensure Certificate directory exists
  become: yes
  file:
    path: "{{ i2_pki_path }}"
    state: directory
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
    mode: 0700

- name: Master - Create Host Certificate
  become: yes
  command: >
    icinga2 pki new-cert
    --cn {{ i2_hostname }}
    --key {{ i2_pki_path }}/{{ i2_hostname }}.key
    --csr {{ i2_pki_path }}/{{ i2_hostname }}.csr
    --cert {{ i2_pki_path }}/{{ i2_hostname }}.crt
  args:
    creates: "{{ i2_pki_path }}/{{ i2_hostname }}.csr"

- name: Master - Sign Host Certificate
  become: yes
  command: >
    icinga2 pki sign-csr
    --csr {{ i2_pki_path }}/{{ i2_hostname }}.csr
    --cert {{ i2_pki_path }}/{{ i2_hostname }}.crt
  args:
    creates: "{{ i2_pki_path }}/{{ i2_hostname }}.crt"
  when: ca_certificate.stat.exists
  notify:
    - restart icinga2

- name: Master - Link CA into PKI path
  become: yes
  file:
    dest: "{{ i2_pki_path }}/ca.crt"
    src: "{{ i2_ca_path }}/ca.crt"
    state: link
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
  when: 
    - ca_certificate.stat.exists
    - client_certificate.stat.exists is sameas false
  notify:
    - restart icinga2

- name: Master - Ensure Global-Templates zone directory exists
  become: yes
  file:
    name: "{{ i2_zones_dir }}/global-templates"
    state: directory
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
    mode: 0755
  when: inventory_hostname == i2_configuration_master

- name: Master - Ensure Master Zone directory exists
  become: yes
  file:
    name: "{{ i2_zones_dir }}/{{ i2_zonename }}"
    state: directory
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
    mode: 0755
  when: inventory_hostname == i2_configuration_master

# Not sure how to make the location "conf.d" configurable.
# Blerim made i2_confd an array of locations to be included.
- name: Master - Create Api-Users config file
  become: yes
  blockinfile:
    create: yes
    dest: "{{ i2_zones_dir }}/{{ i2_zonename }}/api-users.conf"
    marker: "// {mark} Ansible managed block for {{ item.key }}"
    content: "{{ lookup('template', 'api_users_fragment.j2') }}"
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
    mode: 0644
    directory_mode: 0755
  with_dict: "{{ i2_api_users }}"
  when:
    - inventory_hostname == i2_configuration_master
    - i2_api_users is defined
  notify:
    - reload icinga2

- name: Master - Restart Icinga2 Service on Config Master
  service:
    name: icinga2
    state: started
    enabled: yes
  when:
    - inventory_hostname == i2_configuration_master
    - i2_manage_service

