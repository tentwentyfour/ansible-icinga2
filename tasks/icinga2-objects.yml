---
- name: Collect all Zones
  set_fact:
    used_zones: "{{ ( used_zones|default([ i2_global_dir ])
      + [ i2_zones_dir + '/' + hostvars[item].i2_zonename ]
      )|unique
      }}"
  loop: >-
    {{ groups[i2_satellite_group]|default([])
    + groups[i2_master_group]|default([]) }}

# We ignore some files:
# - By default, api-users.conf and endpoints.conf created elsewhere
# - Any files in directories specified in i2_custom_ignore_zone_directories
- name: Set initial list of files to exclude
  set_fact:
    exclude_list: "{{ exclude_list|default([ '^(api-users|endpoints)\\.conf$' ]) }}"
  when: i2_remove_unmanaged_objects

- name: Compile list of patterns to exclude from object cleanup
  set_fact:
    exclude_list: "{{ exclude_list + [ '^' + item + '/.*$' ] }}"
  loop: "{{ i2_ignore_zone_directories }}"
  when:
    - i2_remove_unmanaged_objects
    - i2_ignore_zone_directories|length > 0

- name: Create Zone and per-zone Host Directories
  become: yes
  file:
    name: "{{ item }}/hosts"
    state: directory
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
    mode: 0755
  loop: "{{ used_zones }}"

- name: Collect all pre-existing objects
  become: yes
  find:
    recurse: yes
    paths: "{{ used_zones }}"
    patterns:
      - '.*\.conf'
    excludes: "{{ exclude_list }}"
    use_regex: yes
    file_type: any
  register: existing_objects
  when:
    - i2_remove_unmanaged_objects

- name: Store all existing files as fact
  set_fact:
    existing_files: "{{ existing_files|default([]) + [ item.path ] }}"
  loop: "{{ existing_objects.files }}"
  when:
    - i2_remove_unmanaged_objects

- name: Generate global Templates
  become: yes
  template:
    src: template_template.conf.j2
    dest: "{{ i2_global_dir }}/{{ item.key|lower }}-templates.conf"
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
    mode: 0644
  with_dict: "{{ i2_global_templates }}"
  register: managed_global_templates
  notify:
    - reload icinga2

- name: Generate global Objects
  become: yes
  template:
    src: generic-object-template.conf.j2
    dest: "{{ i2_global_dir }}/{{ item.key|lower }}s.conf"
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
    mode: 0644
  with_dict: "{{ i2_global_objects }}"
  register: managed_global_objects
  notify:
    - reload icinga2

- name: Generate global Apply Rules
  become: yes
  template:
    src: generic-apply-rule-template.conf.j2
    dest: "{{ i2_global_dir }}/{{ item.key|lower }}-rules.conf"
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
    mode: 0644
  with_dict: "{{ i2_global_apply_rules }}"
  register: managed_global_apply_rules
  notify:
    - reload icinga2

# The following 3 tasks must create files on the master.
# Currently, we run them on the master looping through masters
# and satellites, which makes it necessary to copy their
# properties into their hostvars.
# If we were to use delegate_to instead, we'd have a harder
# time cleaning up unmanaged files.

# Note: this loop will break for more than 1 satellite per zone
- name: Create Templates inside Zones
  become: yes
  template:
    src: template-template.conf.j2
    dest: "{{ i2_zones_dir }}/{{ hostvars[item].i2_zonename }}/templates.conf"
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
    mode: 0644
  loop: >-
    {{ groups[i2_satellite_group]|default([]) + [i2_configuration_master] }}
  register: managed_zone_templates
  notify:
    - reload icinga2

- name: Create Objects inside Zones
  become: yes
  template:
    src: object-template.conf.j2
    dest: "{{ i2_zones_dir }}/{{ hostvars[item].i2_zonename }}/objects.conf"
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
    mode: 0644
  loop: >-
    {{ groups[i2_satellite_group]|default([]) + [i2_configuration_master] }}
  register: managed_zone_objects
  notify:
    - reload icinga2

- name: Create Apply Rules inside Zones
  become: yes
  template:
    src: apply-rule-template.conf.j2
    dest: "{{ i2_zones_dir }}/{{ hostvars[item].i2_zonename }}/rules.conf"
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
    mode: 0644
  loop: >-
    {{ groups[i2_satellite_group]|default([]) + [i2_configuration_master] }}
  register: managed_zone_apply_rules
  notify:
    - reload icinga2

- name: Create Hosts inside Zones
  become: yes
  template:
    src: host-template.conf.j2
    dest: "{{ i2_zones_dir }}/{{
        hostvars[item]['i2_parent_zone']|default(hostvars[item]['i2_zonename'])
      }}/hosts/{{ hostvars[item]['i2_hostname'] }}.conf"
    owner: "{{ i2_user }}"
    group: "{{ i2_group }}"
    mode: 0644
  loop: "{{ groups['all'] }}"
  register: managed_zone_hosts
  when:
    - hostvars[item].i2_parent_zone is defined or
      (hostvars[item].i2_master is defined and hostvars[item].i2_master)
    - hostvars[item].i2_hostname is defined
  notify:
    - reload icinga2

- name: Set fact Managed Objects
  set_fact:
    managed_objects: "{{
      managed_global_templates.results
      + managed_global_objects.results
      + managed_global_apply_rules.results
      + managed_zone_templates.results
      + managed_zone_objects.results
      + managed_zone_apply_rules.results
      + managed_zone_hosts.results
    }}"
  when: i2_remove_unmanaged_objects

- name: Set fact for managed object files
  set_fact:
    managed_object_files: "{{ managed_object_files|default([]) + [item.dest] }}"
  loop: "{{ managed_objects }}"
  when:
    - i2_remove_unmanaged_objects
    - item.dest is defined

- name: Removing unmanaged object files
  become: yes
  file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ existing_files|default([]) }}"
  when:
    - item not in managed_object_files
    - i2_remove_unmanaged_objects
